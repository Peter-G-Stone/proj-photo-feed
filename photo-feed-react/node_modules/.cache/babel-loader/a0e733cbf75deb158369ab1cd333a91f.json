{"ast":null,"code":"import _classCallCheck from \"/Users/peter/Development/code/proj-photo-feed/photo-feed-react/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/peter/Development/code/proj-photo-feed/photo-feed-react/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/peter/Development/code/proj-photo-feed/photo-feed-react/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/peter/Development/code/proj-photo-feed/photo-feed-react/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/peter/Development/code/proj-photo-feed/photo-feed-react/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/peter/Development/code/proj-photo-feed/photo-feed-react/src/App.js\";\nimport React, { Component } from 'react';\nimport './App.css';\nimport { connect } from 'react-redux';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\nimport LoginPage from './components/LoginPage';\nimport SignUpPage from './components/SignUpPage';\nimport PicsContainer from './containers/PicsContainer';\nimport Navigation from './Navigation';\nimport SavedPicsContainer from './containers/SavedPicsContainer';\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  function App() {\n    _classCallCheck(this, App);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(App).apply(this, arguments));\n  }\n\n  _createClass(App, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      if (localStorage.token && !this.props.isAuthenticated) {\n        // get current_user from api\n        // this is so if the user refreshes and deletes the store, we can keep them logged in\n        debugger;\n        fetch('http://localhost:3001/api/find_user_with_token', {\n          method: \"POST\",\n          headers: new Headers({\n            \"Content-Type\": \"application/json\",\n            \"Authorization\": \"Bearer \".concat(localStorage.token)\n          }),\n          body: JSON.stringify({\n            token: localStorage.token\n          })\n        });\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          isAuthenticated = _this$props.isAuthenticated,\n          user = _this$props.user;\n      var guestViews = React.createElement(\"div\", {\n        id: \"landing-page\",\n        className: \"wrapper\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35\n        },\n        __self: this\n      }, React.createElement(Navigation, {\n        isAuthenticated: isAuthenticated,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36\n        },\n        __self: this\n      }), React.createElement(Route, {\n        exact: true,\n        path: \"/\",\n        component: PicsContainer,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37\n        },\n        __self: this\n      }), React.createElement(Route, {\n        exact: true,\n        path: \"/login\",\n        component: LoginPage,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      }), React.createElement(Route, {\n        exact: true,\n        path: \"/signup\",\n        component: SignUpPage,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40\n        },\n        __self: this\n      }));\n      var userViews = React.createElement(\"div\", {\n        className: \"wrapper\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      }, React.createElement(Navigation, {\n        isAuthenticated: isAuthenticated,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }), React.createElement(Route, {\n        exact: true,\n        path: \"/\",\n        component: PicsContainer,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }), React.createElement(Route, {\n        exact: true,\n        path: \"/saved_pics\",\n        render: function render() {\n          return React.createElement(SavedPicsContainer, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 50\n            },\n            __self: this\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }));\n      return React.createElement(\"div\", {\n        className: \"App\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }, React.createElement(Router, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      }, isAuthenticated ? userViews : guestViews));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    isAuthenticated: state.authReducer.isAuthenticated,\n    user: state.authReducer.currentUser\n  };\n};\n\nexport default connect(mapStateToProps)(App);","map":{"version":3,"sources":["/Users/peter/Development/code/proj-photo-feed/photo-feed-react/src/App.js"],"names":["React","Component","connect","BrowserRouter","Router","Route","LoginPage","SignUpPage","PicsContainer","Navigation","SavedPicsContainer","App","localStorage","token","props","isAuthenticated","fetch","method","headers","Headers","body","JSON","stringify","user","guestViews","userViews","mapStateToProps","state","authReducer","currentUser"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport './App.css';\nimport { connect } from 'react-redux'\nimport { BrowserRouter as Router, Route } from 'react-router-dom'\nimport LoginPage from './components/LoginPage'\nimport SignUpPage from './components/SignUpPage'\nimport PicsContainer from './containers/PicsContainer'\nimport Navigation from './Navigation'\nimport SavedPicsContainer from './containers/SavedPicsContainer'\n\n\nclass App extends Component {\n  \n  componentDidMount() {\n    if (localStorage.token && !this.props.isAuthenticated){\n      // get current_user from api\n      // this is so if the user refreshes and deletes the store, we can keep them logged in\n      debugger\n      fetch('http://localhost:3001/api/find_user_with_token', {\n        method: \"POST\",\n        headers: new Headers({\n          \"Content-Type\": \"application/json\",\n          \"Authorization\": `Bearer ${localStorage.token}`,\n        }),\n        body: JSON.stringify({token: localStorage.token})\n      })\n    }\n  }\n  \n  render() {\n\n    const {isAuthenticated, user} = this.props\n\n    const guestViews = (\n      <div id=\"landing-page\" className=\"wrapper\">\n        <Navigation isAuthenticated={isAuthenticated} />\n        <Route exact path=\"/\" component={PicsContainer} />\n        {/* <Route exact path=\"/about\" component={About} /> */}\n        <Route exact path=\"/login\" component={LoginPage} />\n        <Route exact path=\"/signup\" component={SignUpPage} />\n        {/* <Footer/> */}\n      </div>\n    )\n\n    const userViews = (\n      <div className=\"wrapper\">\n        <Navigation isAuthenticated={isAuthenticated} />\n        <Route exact path=\"/\" component={PicsContainer} />\n        {/* <Route exact path=\"/about\" component={About} /> */}\n        <Route exact path=\"/saved_pics\" render={() => <SavedPicsContainer/>} />\n        {/* <Footer/> */}\n      </div>\n    )\n\n\n    return (\n      <div className=\"App\">\n        <Router >\n            {isAuthenticated ? userViews : guestViews}\n        </Router>\n      </div>\n    );\n  }\n}\n\n\n\n\nconst mapStateToProps = (state) => {\n  return {\n    isAuthenticated: state.authReducer.isAuthenticated,\n    user: state.authReducer.currentUser\n  }\n}\n\nexport default connect(mapStateToProps)(App);\n"]},"metadata":{},"sourceType":"module"}
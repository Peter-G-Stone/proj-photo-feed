{"ast":null,"code":"import { API_URL } from './apiUrl';\nimport * as types from './actionTypes';\n\nvar authRequest = function authRequest() {\n  return {\n    type: types.AUTHENTICATION_REQUEST\n  };\n};\n\nvar authSuccess = function authSuccess(user, token) {\n  return {\n    type: types.AUTHENTICATION_SUCCESS,\n    user: user,\n    token: token\n  };\n};\n\nvar authFailure = function authFailure(errors) {\n  return {\n    type: types.AUTHENTICATION_FAILURE,\n    errors: errors\n  };\n};\n\nexport var logout = function logout() {\n  return function (dispatch) {\n    localStorage.clear();\n    return dispatch({\n      type: types.LOGOUT\n    });\n  };\n};\nexport var findUserWithToken = function findUserWithToken() {\n  return function (dispatch) {\n    return fetch('http://localhost:3001/api/find_user_with_token', {\n      method: \"POST\",\n      headers: new Headers({\n        \"Content-Type\": \"application/json\",\n        \"Authorization\": \"Bearer \".concat(localStorage.token)\n      }),\n      body: JSON.stringify({\n        token: localStorage.token\n      })\n    }).then(function (resp) {\n      return resp.json();\n    }).then(function (userJson) {\n      return dispatch(authSuccess(userJson, localStorage.token)).catch(function (error) {\n        return console.log(error);\n      });\n    });\n  };\n};\nexport var signup = function signup(user, history) {\n  var newUser = user;\n  return function (dispatch) {\n    return fetch(\"\".concat(API_URL, \"/users\"), {\n      method: \"POST\",\n      headers: {\n        \"Accept\": \"application/json\",\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        user: user\n      })\n    }).then(function (response) {\n      return response.json();\n    }).then(function (jresp) {\n      if (jresp.id) {\n        //dispatch to authenticate if user was successfully created\n        dispatch(authenticate({\n          email: newUser.email,\n          password: newUser.password\n        }, history));\n      } else if (jresp.email || jresp.username) {\n        fireSignUpAlertMsg(jresp);\n      }\n    }).catch(function (errors) {\n      debugger;\n      window.alert(\"Sorry, something went wrong. Please try again.\");\n      dispatch(authFailure(errors));\n    });\n  };\n};\nexport var authenticate = function authenticate(credentials, history) {\n  return function (dispatch) {\n    dispatch(authRequest());\n    return fetch(\"\".concat(API_URL, \"/user_token\"), {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        auth: credentials\n      })\n    }).then(function (res) {\n      return res.json();\n    }).then(function (response) {\n      var token = response.jwt;\n      localStorage.setItem('token', token);\n      history.push('/');\n      window.alert('You are now logged in!');\n      return getUser(credentials);\n    }).then(function (user) {\n      console.log(user);\n      dispatch(authSuccess(user, localStorage.token));\n    }).catch(function (errors) {\n      window.alert(\"Sorry, something went wrong. Please try logging in again.\");\n      dispatch(authFailure(errors));\n      localStorage.clear();\n    });\n  };\n}; // this getUser is called by authenticate, it is not an action in and of itself currently (because it doesn't return a dispatch call):\n\nexport var getUser = function getUser(credentials) {\n  var request = new Request(\"\".concat(API_URL, \"/find_user\"), {\n    method: \"POST\",\n    headers: new Headers({\n      \"Content-Type\": \"application/json\",\n      \"Authorization\": \"Bearer \".concat(localStorage.token)\n    }),\n    body: JSON.stringify({\n      user: credentials\n    })\n  });\n  return fetch(request).then(function (response) {\n    return response.json();\n  }).then(function (userJson) {\n    return userJson;\n  }).catch(function (error) {\n    return error;\n  });\n};\n\nvar fireSignUpAlertMsg = function fireSignUpAlertMsg(jresp) {\n  var alertMsg = 'Another account is already using that ';\n  alertMsg = jresp.email ? alertMsg += 'email' : alertMsg;\n  alertMsg = jresp.email && jresp.username ? alertMsg += ' and ' : alertMsg;\n  alertMsg = jresp.username ? alertMsg += 'username' : alertMsg;\n  alertMsg += '.';\n  window.alert(alertMsg);\n};","map":{"version":3,"sources":["/Users/peter/Development/code/proj-photo-feed/photo-feed-react/src/actions/authActions.js"],"names":["API_URL","types","authRequest","type","AUTHENTICATION_REQUEST","authSuccess","user","token","AUTHENTICATION_SUCCESS","authFailure","errors","AUTHENTICATION_FAILURE","logout","dispatch","localStorage","clear","LOGOUT","findUserWithToken","fetch","method","headers","Headers","body","JSON","stringify","then","resp","json","userJson","catch","error","console","log","signup","history","newUser","response","jresp","id","authenticate","email","password","username","fireSignUpAlertMsg","window","alert","credentials","auth","res","jwt","setItem","push","getUser","request","Request","alertMsg"],"mappings":"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","sourcesContent":["import { API_URL } from './apiUrl'\nimport * as types from './actionTypes'\n\nconst authRequest = () => {\n  return {\n    type: types.AUTHENTICATION_REQUEST\n  }\n}\n\nconst authSuccess = (user, token) => {\n  return {\n    type: types.AUTHENTICATION_SUCCESS,\n    user: user,\n    token: token\n  }\n}\n\nconst authFailure = (errors) => {\n  return {\n    type: types.AUTHENTICATION_FAILURE,\n    errors: errors\n  }\n}\n\nexport const logout = () => {\n  return dispatch => {\n    localStorage.clear();\n    return dispatch({\n      type: types.LOGOUT\n    });\n  }\n}\n\nexport const findUserWithToken = () => {\n  return dispatch => {\n    return fetch('http://localhost:3001/api/find_user_with_token', {\n          method: \"POST\",\n          headers: new Headers({\n            \"Content-Type\": \"application/json\",\n            \"Authorization\": `Bearer ${localStorage.token}`,\n          }),\n          body: JSON.stringify({token: localStorage.token})\n        })\n        .then(resp => resp.json())\n        .then(userJson => {\n          return dispatch(authSuccess(userJson, localStorage.token))\n        .catch(error => console.log(error))\n    })\n  }\n}\n\nexport const signup = (user, history) => {\n  const newUser = user\n  return dispatch => {\n    return fetch(`${API_URL}/users`, {\n      method: \"POST\",\n      headers: {\n        \"Accept\":\"application/json\",\n        \"Content-Type\":\"application/json\"\n      },\n      body: JSON.stringify({user: user})\n    })\n      .then(response => {\n        return response.json()})\n      .then(jresp => {\n        \n        if (jresp.id){ //dispatch to authenticate if user was successfully created\n            dispatch(authenticate({\n              email: newUser.email,\n              password: newUser.password},\n              history)\n            );\n        }\n        else if (jresp.email || jresp.username) {\n            fireSignUpAlertMsg(jresp)\n        }\n      })\n      .catch((errors) => {\n          debugger\n        window.alert(\"Sorry, something went wrong. Please try again.\") \n        dispatch(authFailure(errors))\n      })\n  };\n}\n\nexport const authenticate = (credentials, history) => {\n    return dispatch => {\n    dispatch(authRequest())\n    return fetch(`${API_URL}/user_token`, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({auth: credentials})\n    })\n      .then(res => res.json())\n      .then((response) => {\n          const token = response.jwt;\n          localStorage.setItem('token', token);\n          history.push('/')\n          window.alert('You are now logged in!')\n          return getUser(credentials)\n      })\n      .then((user) => {\n        console.log(user)\n          dispatch(authSuccess(user, localStorage.token))\n      })\n      .catch((errors) => {\n          window.alert(\"Sorry, something went wrong. Please try logging in again.\")\n          dispatch(authFailure(errors))\n          localStorage.clear()\n      })\n  }\n}\n\n// this getUser is called by authenticate, it is not an action in and of itself currently (because it doesn't return a dispatch call):\nexport const getUser = (credentials) => {\n  const request = new Request(`${API_URL}/find_user`, {\n    method: \"POST\",\n    headers: new Headers({\n      \"Content-Type\": \"application/json\",\n      \"Authorization\": `Bearer ${localStorage.token}`,\n    }),\n    body: JSON.stringify({user: credentials})\n  })\n  return fetch(request)\n    .then(response => response.json())\n    .then(userJson => {\n        return userJson})\n    .catch(error => {\n      return error;\n    });\n}\n\nconst fireSignUpAlertMsg = (jresp) => {\n    let alertMsg = 'Another account is already using that '\n    alertMsg = jresp.email ? alertMsg += 'email' : alertMsg\n    alertMsg = (jresp.email && jresp.username) ? alertMsg += ' and ' : alertMsg\n    alertMsg = jresp.username ? alertMsg += 'username' : alertMsg\n    alertMsg += '.'\n    window.alert(alertMsg)\n}"]},"metadata":{},"sourceType":"module"}
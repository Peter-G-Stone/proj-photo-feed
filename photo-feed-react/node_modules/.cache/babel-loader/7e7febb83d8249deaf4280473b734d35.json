{"ast":null,"code":"import _classCallCheck from \"/Users/peter/Development/code/proj-photo-feed/photo-feed-react/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/peter/Development/code/proj-photo-feed/photo-feed-react/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/peter/Development/code/proj-photo-feed/photo-feed-react/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/peter/Development/code/proj-photo-feed/photo-feed-react/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/peter/Development/code/proj-photo-feed/photo-feed-react/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/peter/Development/code/proj-photo-feed/photo-feed-react/src/containers/PicsContainer.js\";\nimport React, { Component } from 'react';\nimport PicsList from '../components/Pics/PicsList';\nimport { connect } from 'react-redux';\nimport { fetchPics as _fetchPics } from '../actions/picActions';\n\nvar PicsContainer =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(PicsContainer, _Component);\n\n  function PicsContainer() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, PicsContainer);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(PicsContainer)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _this.filterForUserPics = function () {\n      var userPicIds = _this.props.user.pics.map(function (picObj) {\n        return picObj.id;\n      });\n\n      var UserPics = _this.props.pics.filter(function (pic) {\n        return userPicIds.includes(pic.id);\n      });\n\n      return UserPics;\n    };\n\n    _this.renderSubtitle = function () {\n      if (_this.props.containerFor === \"saved_pics\") {\n        return React.createElement(\"h3\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 23\n          },\n          __self: this\n        }, \"Your Collection\");\n      }\n    };\n\n    return _this;\n  }\n\n  _createClass(PicsContainer, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      if (this.props.pics.length === 0) {\n        this.props.fetchPics();\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var filteredPics;\n\n      if (this.props.containerFor === \"pic_list\") {\n        filteredPics = this.props.pics;\n      } else if (this.props.containerFor === \"saved_pics\") {\n        filteredPics = this.filterForUserPics();\n      }\n\n      if (this.props.loading) {\n        return React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 39\n          },\n          __self: this\n        }, \" Loading...\");\n      } else {\n        return React.createElement(React.Fragment, null, React.createElement(PicsList, {\n          pics: filteredPics,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 45\n          },\n          __self: this\n        }));\n      }\n    }\n  }]);\n\n  return PicsContainer;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    pics: state.picsReducer.pics,\n    loading: state.picsReducer.loading,\n    user: state.authReducer.currentUser\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    fetchPics: function fetchPics() {\n      return dispatch(_fetchPics());\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(PicsContainer);","map":{"version":3,"sources":["/Users/peter/Development/code/proj-photo-feed/photo-feed-react/src/containers/PicsContainer.js"],"names":["React","Component","PicsList","connect","fetchPics","PicsContainer","filterForUserPics","userPicIds","props","user","pics","map","picObj","id","UserPics","filter","pic","includes","renderSubtitle","containerFor","length","filteredPics","loading","mapStateToProps","state","picsReducer","authReducer","currentUser","mapDispatchToProps","dispatch"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,QAAP,MAAqB,6BAArB;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,SAAQC,SAAS,IAATA,UAAR,QAAwB,uBAAxB;;IAEMC,a;;;;;;;;;;;;;;;;;;UASFC,iB,GAAoB,YAAM;AACtB,UAAMC,UAAU,GAAG,MAAKC,KAAL,CAAWC,IAAX,CAAgBC,IAAhB,CAAqBC,GAArB,CAAyB,UAAAC,MAAM;AAAA,eAAIA,MAAM,CAACC,EAAX;AAAA,OAA/B,CAAnB;;AACA,UAAMC,QAAQ,GAAG,MAAKN,KAAL,CAAWE,IAAX,CAAgBK,MAAhB,CAAuB,UAAAC,GAAG;AAAA,eAAIT,UAAU,CAACU,QAAX,CAAoBD,GAAG,CAACH,EAAxB,CAAJ;AAAA,OAA1B,CAAjB;;AACA,aAAOC,QAAP;AACH,K;;UAEDI,c,GAAiB,YAAM;AACnB,UAAI,MAAKV,KAAL,CAAWW,YAAX,KAA4B,YAAhC,EAA6C;AACzC,eAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BAAP;AACH;AACJ,K;;;;;;;wCAjBmB;AAEhB,UAAI,KAAKX,KAAL,CAAWE,IAAX,CAAgBU,MAAhB,KAA2B,CAA/B,EAAiC;AACzB,aAAKZ,KAAL,CAAWJ,SAAX;AACP;AACJ;;;6BAcQ;AACL,UAAIiB,YAAJ;;AACA,UAAI,KAAKb,KAAL,CAAWW,YAAX,KAA4B,UAAhC,EAA2C;AACvCE,QAAAA,YAAY,GAAG,KAAKb,KAAL,CAAWE,IAA1B;AACH,OAFD,MAGK,IAAI,KAAKF,KAAL,CAAWW,YAAX,KAA4B,YAAhC,EAA6C;AAC9CE,QAAAA,YAAY,GAAG,KAAKf,iBAAL,EAAf;AACH;;AAGD,UAAI,KAAKE,KAAL,CAAWc,OAAf,EAAuB;AACnB,eACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBADJ;AAGH,OAJD,MAIO;AACH,eACI,0CAEA,oBAAC,QAAD;AAAU,UAAA,IAAI,EAAED,YAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAFA,CADJ;AAMH;AACJ;;;;EA3CuBpB,S;;AA8C5B,IAAMsB,eAAe,GAAG,SAAlBA,eAAkB,CAACC,KAAD,EAAW;AAC/B,SAAO;AACHd,IAAAA,IAAI,EAAEc,KAAK,CAACC,WAAN,CAAkBf,IADrB;AAEHY,IAAAA,OAAO,EAAEE,KAAK,CAACC,WAAN,CAAkBH,OAFxB;AAGHb,IAAAA,IAAI,EAAEe,KAAK,CAACE,WAAN,CAAkBC;AAHrB,GAAP;AAKH,CAND;;AAQA,IAAMC,kBAAkB,GAAG,SAArBA,kBAAqB,CAACC,QAAD;AAAA,SAAe;AACtCzB,IAAAA,SAAS,EAAE;AAAA,aAAMyB,QAAQ,CAACzB,UAAS,EAAV,CAAd;AAAA;AAD2B,GAAf;AAAA,CAA3B;;AAKA,eAAeD,OAAO,CAACoB,eAAD,EAAkBK,kBAAlB,CAAP,CAA6CvB,aAA7C,CAAf","sourcesContent":["import React, { Component } from 'react';\nimport PicsList from '../components/Pics/PicsList'\nimport {connect} from 'react-redux'\nimport {fetchPics} from '../actions/picActions'\n\nclass PicsContainer extends Component {\n    \n    componentDidMount() {\n       \n        if (this.props.pics.length === 0){\n                this.props.fetchPics()\n        }\n    }\n\n    filterForUserPics = () => {\n        const userPicIds = this.props.user.pics.map(picObj => picObj.id)\n        const UserPics = this.props.pics.filter(pic => userPicIds.includes(pic.id))\n        return UserPics\n    }\n\n    renderSubtitle = () => {    \n        if (this.props.containerFor === \"saved_pics\"){\n            return <h3>Your Collection</h3>\n        } \n    }\n    \n    render() {\n        let filteredPics\n        if (this.props.containerFor === \"pic_list\"){\n            filteredPics = this.props.pics\n        } \n        else if (this.props.containerFor === \"saved_pics\"){\n            filteredPics = this.filterForUserPics()\n        } \n        \n\n        if (this.props.loading){\n            return (\n                <p> Loading...</p>\n            )\n        } else {\n            return(\n                <>\n                {/* insert a function to render a subtitle - user page or artist page */}\n                <PicsList pics={filteredPics} />\n                </>\n            )\n        }\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        pics: state.picsReducer.pics,\n        loading: state.picsReducer.loading,\n        user: state.authReducer.currentUser\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => ({\n    fetchPics: () => dispatch(fetchPics())  \n})\n  \n\nexport default connect(mapStateToProps, mapDispatchToProps)(PicsContainer)"]},"metadata":{},"sourceType":"module"}
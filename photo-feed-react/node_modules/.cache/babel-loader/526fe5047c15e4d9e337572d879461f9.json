{"ast":null,"code":"import _classCallCheck from \"/Users/peter/Development/code/proj-photo-feed/photo-feed-react/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/peter/Development/code/proj-photo-feed/photo-feed-react/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/peter/Development/code/proj-photo-feed/photo-feed-react/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/peter/Development/code/proj-photo-feed/photo-feed-react/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/peter/Development/code/proj-photo-feed/photo-feed-react/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/peter/Development/code/proj-photo-feed/photo-feed-react/src/App.js\";\nimport React, { Component } from 'react';\nimport './App.css';\nimport { connect } from 'react-redux';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\nimport { Switch } from 'react-router-dom';\nimport LoginPage from './components/LoginPage';\nimport SignUpPage from './components/SignUpPage';\nimport PicsContainer from './containers/PicsContainer';\nimport Navigation from './Navigation';\nimport About from './About';\nimport { findUserWithToken as _findUserWithToken } from './actions/authActions';\nimport ScrollToTop from './containers/ScrollToTop';\nimport Container from 'react-bootstrap/Container';\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  function App() {\n    _classCallCheck(this, App);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(App).apply(this, arguments));\n  }\n\n  _createClass(App, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      if (localStorage.token && !this.props.isAuthenticated) {\n        // get current_user from api\n        // this is so if the user refreshes and deletes the store, we can keep them logged in\n        this.props.findUserWithToken();\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          isAuthenticated = _this$props.isAuthenticated,\n          user = _this$props.user;\n      var guestViews = React.createElement(React.Fragment, null, React.createElement(Route, {\n        exact: true,\n        path: \"/about\",\n        component: About,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34\n        },\n        __self: this\n      }), React.createElement(Route, {\n        exact: true,\n        path: \"/login\",\n        component: LoginPage,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35\n        },\n        __self: this\n      }), React.createElement(Route, {\n        exact: true,\n        path: \"/signup\",\n        component: SignUpPage,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36\n        },\n        __self: this\n      }));\n      var userViews = React.createElement(React.Fragment, null, React.createElement(Route, {\n        exact: true,\n        path: \"/about\",\n        component: About,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      }), React.createElement(Route, {\n        exact: true,\n        path: \"/saved_pics\",\n        render: function render(props) {\n          return React.createElement(PicsContainer, Object.assign({}, props, {\n            containerFor: \"saved_pics\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 46\n            },\n            __self: this\n          }));\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      }));\n      return React.createElement(\"div\", {\n        className: \"App\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      }, React.createElement(Router, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }, React.createElement(ScrollToTop, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }, React.createElement(Navigation, {\n        isAuthenticated: isAuthenticated,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      }), React.createElement(Container, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }, React.createElement(Switch, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }, React.createElement(Route, {\n        exact: true,\n        path: \"/\",\n        render: function render(props) {\n          return React.createElement(PicsContainer, Object.assign({}, props, {\n            containerFor: \"pic_list\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 63\n            },\n            __self: this\n          }));\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }), isAuthenticated ? userViews : guestViews, React.createElement(Route, {\n        path: \"/artists/:name\",\n        render: function render(props) {\n          return React.createElement(PicsContainer, Object.assign({}, props, {\n            containerFor: \"artist_page\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 67\n            },\n            __self: this\n          }));\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }))))));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    isAuthenticated: state.authReducer.isAuthenticated,\n    user: state.authReducer.currentUser\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    findUserWithToken: function findUserWithToken() {\n      return dispatch(_findUserWithToken());\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);","map":{"version":3,"sources":["/Users/peter/Development/code/proj-photo-feed/photo-feed-react/src/App.js"],"names":["React","Component","connect","BrowserRouter","Router","Route","Switch","LoginPage","SignUpPage","PicsContainer","Navigation","About","findUserWithToken","ScrollToTop","Container","App","localStorage","token","props","isAuthenticated","user","guestViews","userViews","mapStateToProps","state","authReducer","currentUser","mapDispatchToProps","dispatch"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,WAAP;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,aAAa,IAAIC,MAA1B,EAAkCC,KAAlC,QAA+C,kBAA/C;AACA,SAASC,MAAT,QAAuB,kBAAvB;AACA,OAAOC,SAAP,MAAsB,wBAAtB;AACA,OAAOC,UAAP,MAAuB,yBAAvB;AACA,OAAOC,aAAP,MAA0B,4BAA1B;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,SAASC,iBAAiB,IAAjBA,kBAAT,QAAkC,uBAAlC;AACA,OAAOC,WAAP,MAAwB,0BAAxB;AACA,OAAOC,SAAP,MAAsB,2BAAtB;;IAGMC,G;;;;;;;;;;;;;wCAEgB;AAClB,UAAIC,YAAY,CAACC,KAAb,IAAsB,CAAC,KAAKC,KAAL,CAAWC,eAAtC,EAAsD;AACpD;AACA;AACA,aAAKD,KAAL,CAAWN,iBAAX;AAED;AACF;;;6BAEQ;AAAA,wBAEyB,KAAKM,KAF9B;AAAA,UAEAC,eAFA,eAEAA,eAFA;AAAA,UAEiBC,IAFjB,eAEiBA,IAFjB;AAIP,UAAMC,UAAU,GACd,0CAEE,oBAAC,KAAD;AAAO,QAAA,KAAK,MAAZ;AAAa,QAAA,IAAI,EAAC,QAAlB;AAA2B,QAAA,SAAS,EAAEV,KAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFF,EAGE,oBAAC,KAAD;AAAO,QAAA,KAAK,MAAZ;AAAa,QAAA,IAAI,EAAC,QAAlB;AAA2B,QAAA,SAAS,EAAEJ,SAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAHF,EAIE,oBAAC,KAAD;AAAO,QAAA,KAAK,MAAZ;AAAa,QAAA,IAAI,EAAC,SAAlB;AAA4B,QAAA,SAAS,EAAEC,UAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAJF,CADF;AAWA,UAAMc,SAAS,GACb,0CAEE,oBAAC,KAAD;AAAO,QAAA,KAAK,MAAZ;AAAa,QAAA,IAAI,EAAC,QAAlB;AAA2B,QAAA,SAAS,EAAEX,KAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFF,EAGE,oBAAC,KAAD;AAAO,QAAA,KAAK,MAAZ;AAAa,QAAA,IAAI,EAAC,aAAlB;AAAgC,QAAA,MAAM,EAAE,gBAACO,KAAD;AAAA,iBAAW,oBAAC,aAAD,oBAAmBA,KAAnB;AAA0B,YAAA,YAAY,EAAC,YAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAAX;AAAA,SAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAHF,CADF;AAYA,aACE;AAAK,QAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,UAAD;AAAY,QAAA,eAAe,EAAEC,eAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,EAGE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAEE,oBAAC,KAAD;AAAO,QAAA,KAAK,MAAZ;AAAa,QAAA,IAAI,EAAC,GAAlB;AAAsB,QAAA,MAAM,EAAE,gBAACD,KAAD;AAAA,iBAAW,oBAAC,aAAD,oBAAmBA,KAAnB;AAA0B,YAAA,YAAY,EAAC,UAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAAX;AAAA,SAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFF,EAIGC,eAAe,GAAGG,SAAH,GAAeD,UAJjC,EAME,oBAAC,KAAD;AAAO,QAAA,IAAI,EAAC,gBAAZ;AAA6B,QAAA,MAAM,EAAE,gBAACH,KAAD;AAAA,iBAAW,oBAAC,aAAD,oBAAmBA,KAAnB;AAA0B,YAAA,YAAY,EAAC,aAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAAX;AAAA,SAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QANF,CADF,CAHF,CADF,CADF,CADF;AAqBD;;;;EA3DejB,S;;AAiElB,IAAMsB,eAAe,GAAG,SAAlBA,eAAkB,CAACC,KAAD,EAAW;AACjC,SAAO;AACLL,IAAAA,eAAe,EAAEK,KAAK,CAACC,WAAN,CAAkBN,eAD9B;AAELC,IAAAA,IAAI,EAAEI,KAAK,CAACC,WAAN,CAAkBC;AAFnB,GAAP;AAID,CALD;;AAOA,IAAMC,kBAAkB,GAAG,SAArBA,kBAAqB,CAACC,QAAD;AAAA,SAAe;AACxChB,IAAAA,iBAAiB,EAAE;AAAA,aAAMgB,QAAQ,CAAChB,kBAAiB,EAAlB,CAAd;AAAA;AADqB,GAAf;AAAA,CAA3B;;AAIA,eAAeV,OAAO,CAACqB,eAAD,EAAkBI,kBAAlB,CAAP,CAA6CZ,GAA7C,CAAf","sourcesContent":["import React, { Component } from 'react';\nimport './App.css';\nimport { connect } from 'react-redux'\nimport { BrowserRouter as Router, Route } from 'react-router-dom'\nimport { Switch } from 'react-router-dom'\nimport LoginPage from './components/LoginPage'\nimport SignUpPage from './components/SignUpPage'\nimport PicsContainer from './containers/PicsContainer'\nimport Navigation from './Navigation'\nimport About from './About'\nimport { findUserWithToken } from './actions/authActions';\nimport ScrollToTop from './containers/ScrollToTop';\nimport Container from 'react-bootstrap/Container'\n\n\nclass App extends Component {\n  \n  componentDidMount() {\n    if (localStorage.token && !this.props.isAuthenticated){\n      // get current_user from api\n      // this is so if the user refreshes and deletes the store, we can keep them logged in\n      this.props.findUserWithToken()\n      \n    }\n  }\n  \n  render() {\n\n    const {isAuthenticated, user} = this.props\n\n    const guestViews = (\n      <>\n        \n        <Route exact path=\"/about\" component={About} />\n        <Route exact path=\"/login\" component={LoginPage} />\n        <Route exact path=\"/signup\" component={SignUpPage} />\n        \n        {/* <Footer/> */}\n      </>\n    )\n\n    const userViews = (\n      <>\n        \n        <Route exact path=\"/about\" component={About} />\n        <Route exact path=\"/saved_pics\" render={(props) => <PicsContainer {...props} containerFor=\"saved_pics\"/>} />\n        \n        {/* <Route exact path=\"/saved_pics\" render={() => <SavedPicsContainer/>} /> */}\n        {/* <Footer/> */}\n      </>\n    )\n\n\n    return (\n      <div className=\"App\">\n        <Router >\n          <ScrollToTop>\n            <Navigation isAuthenticated={isAuthenticated} />\n            \n            <Container>\n              <Switch>\n                \n                <Route exact path=\"/\" render={(props) => <PicsContainer {...props} containerFor=\"pic_list\"/>} />\n\n                {isAuthenticated ? userViews : guestViews}\n\n                <Route path=\"/artists/:name\" render={(props) => <PicsContainer {...props} containerFor=\"artist_page\"/>} />\n                \n              </Switch>\n            </Container>\n          </ScrollToTop>\n        </Router>\n      </div>\n    );\n  }\n}\n\n\n\n\nconst mapStateToProps = (state) => {\n  return {\n    isAuthenticated: state.authReducer.isAuthenticated,\n    user: state.authReducer.currentUser\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => ({\n  findUserWithToken: () => dispatch(findUserWithToken())\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n"]},"metadata":{},"sourceType":"module"}
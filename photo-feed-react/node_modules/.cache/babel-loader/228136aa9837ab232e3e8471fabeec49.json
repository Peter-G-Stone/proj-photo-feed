{"ast":null,"code":"import _classCallCheck from \"/Users/peter/Development/code/proj-photo-feed/photo-feed-react/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/peter/Development/code/proj-photo-feed/photo-feed-react/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/peter/Development/code/proj-photo-feed/photo-feed-react/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/peter/Development/code/proj-photo-feed/photo-feed-react/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/peter/Development/code/proj-photo-feed/photo-feed-react/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/peter/Development/code/proj-photo-feed/photo-feed-react/src/components/Pics/Pic.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\n\nvar Pic =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Pic, _Component);\n\n  function Pic(props) {\n    var _this;\n\n    _classCallCheck(this, Pic);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Pic).call(this, props));\n\n    _this.savePic = function (e) {\n      e.preventDefault();\n      fetch('http://localhost:3001/api/add_pic_to_user', {\n        method: \"POST\",\n        headers: {\n          \"Accept\": \"application/json\",\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          request: {\n            user: _this.props.currentUser,\n            pic: _this.props.pic\n          }\n        })\n      }).then(function (resp) {\n        return resp.json();\n      }).then(function (jresp) {\n        debugger;\n        return jresp;\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(Pic, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var pic = this.props.pic;\n      var userPicsIds = [];\n\n      if (this.props.currentUser.username) {\n        userPicsIds = this.props.currentUser.pics.map(function (picIdObj) {\n          return picIdObj.id;\n        });\n      }\n\n      debugger;\n      return React.createElement(React.Fragment, null, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        alt: \"picInList\",\n        src: pic.url,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40\n        },\n        __self: this\n      })), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        },\n        __self: this\n      }, \"By: \", pic.artist.name), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      }, React.createElement(\"a\", {\n        href: \"#\",\n        onClick: function onClick(e) {\n          return _this2.savePic(e);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      }, \"Save\")), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43\n        },\n        __self: this\n      }, \"Current user: \", this.props.currentUser.username), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      }, \" - \"));\n    }\n  }]);\n\n  return Pic;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    currentUser: state.authReducer.currentUser\n  };\n};\n\nexport default connect(mapStateToProps)(Pic);","map":{"version":3,"sources":["/Users/peter/Development/code/proj-photo-feed/photo-feed-react/src/components/Pics/Pic.js"],"names":["React","Component","connect","Pic","props","savePic","e","preventDefault","fetch","method","headers","body","JSON","stringify","request","user","currentUser","pic","then","resp","json","jresp","userPicsIds","username","pics","map","picIdObj","id","url","artist","name","mapStateToProps","state","authReducer"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,SAAQC,OAAR,QAAsB,aAAtB;;IAIMC,G;;;;;AACF,eAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACf,6EAAMA,KAAN;;AADe,UAInBC,OAJmB,GAIT,UAACC,CAAD,EAAO;AACbA,MAAAA,CAAC,CAACC,cAAF;AACAC,MAAAA,KAAK,CAAC,2CAAD,EAA8C;AAC/CC,QAAAA,MAAM,EAAE,MADuC;AAE/CC,QAAAA,OAAO,EAAE;AACL,oBAAS,kBADJ;AAEL,0BAAe;AAFV,SAFsC;AAM7CC,QAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AAACC,UAAAA,OAAO,EAAE;AAC3BC,YAAAA,IAAI,EAAE,MAAKX,KAAL,CAAWY,WADU;AAE3BC,YAAAA,GAAG,EAAE,MAAKb,KAAL,CAAWa;AAFW;AAAV,SAAf;AANuC,OAA9C,CAAL,CAUCC,IAVD,CAUM,UAAAC,IAAI;AAAA,eAAIA,IAAI,CAACC,IAAL,EAAJ;AAAA,OAVV,EAWCF,IAXD,CAWM,UAAAG,KAAK,EAAI;AACX;AACA,eAAOA,KAAP;AACH,OAdD;AAeH,KArBkB;;AAAA;AAElB;;;;6BAsBS;AAAA;;AACN,UAAMJ,GAAG,GAAG,KAAKb,KAAL,CAAWa,GAAvB;AACA,UAAIK,WAAW,GAAG,EAAlB;;AACA,UAAI,KAAKlB,KAAL,CAAWY,WAAX,CAAuBO,QAA3B,EAAoC;AAChCD,QAAAA,WAAW,GAAG,KAAKlB,KAAL,CAAWY,WAAX,CAAuBQ,IAAvB,CAA4BC,GAA5B,CAAgC,UAAAC,QAAQ;AAAA,iBAAIA,QAAQ,CAACC,EAAb;AAAA,SAAxC,CAAd;AACH;;AACD;AACA,aACI,0CACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAG;AAAK,QAAA,GAAG,EAAC,WAAT;AAAqB,QAAA,GAAG,EAAEV,GAAG,CAACW,GAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAH,CADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAAQX,GAAG,CAACY,MAAJ,CAAWC,IAAnB,CAFJ,EAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAG;AAAG,QAAA,IAAI,EAAC,GAAR;AAAY,QAAA,OAAO,EAAE,iBAACxB,CAAD;AAAA,iBAAO,MAAI,CAACD,OAAL,CAAaC,CAAb,CAAP;AAAA,SAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAH,CAHJ,EAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BAAkB,KAAKF,KAAL,CAAWY,WAAX,CAAuBO,QAAzC,CAJJ,EAKI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eALJ,CADJ;AASH;;;;EAzCatB,S;;AA4ClB,IAAM8B,eAAe,GAAG,SAAlBA,eAAkB,CAACC,KAAD,EAAW;AAC/B,SAAO;AAAChB,IAAAA,WAAW,EAAEgB,KAAK,CAACC,WAAN,CAAkBjB;AAAhC,GAAP;AACH,CAFD;;AAIA,eAAed,OAAO,CAAC6B,eAAD,CAAP,CAAyB5B,GAAzB,CAAf","sourcesContent":["import React, {Component} from 'react';\nimport {connect} from 'react-redux'\n\n\n\nclass Pic extends Component {\n    constructor(props) {\n        super(props);\n    }\n\n    savePic = (e) => {\n        e.preventDefault()\n        fetch('http://localhost:3001/api/add_pic_to_user', {\n            method: \"POST\",\n            headers: {\n                \"Accept\":\"application/json\",\n                \"Content-Type\":\"application/json\"\n              },\n              body: JSON.stringify({request: {\n                  user: this.props.currentUser, \n                  pic: this.props.pic}})\n        })\n        .then(resp => resp.json())\n        .then(jresp => {\n            debugger\n            return jresp\n        })\n    }\n\n    \n    render () {\n        const pic = this.props.pic\n        let userPicsIds = []\n        if (this.props.currentUser.username){\n            userPicsIds = this.props.currentUser.pics.map(picIdObj => picIdObj.id)\n        }\n        debugger\n        return (\n            <>\n                <p><img alt=\"picInList\" src={pic.url}/></p>\n                <p>By: {pic.artist.name}</p>\n                <p><a href=\"#\" onClick={(e) => this.savePic(e)}>Save</a></p>\n                <p>Current user: {this.props.currentUser.username}</p>\n                <p> - </p>\n            </>\n        )\n    }\n} \n\nconst mapStateToProps = (state) => {\n    return {currentUser: state.authReducer.currentUser}\n}\n\nexport default connect(mapStateToProps)(Pic)"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import _classCallCheck from \"/Users/peter/Development/code/proj-photo-feed/photo-feed-react/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/peter/Development/code/proj-photo-feed/photo-feed-react/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/peter/Development/code/proj-photo-feed/photo-feed-react/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/peter/Development/code/proj-photo-feed/photo-feed-react/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/peter/Development/code/proj-photo-feed/photo-feed-react/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/peter/Development/code/proj-photo-feed/photo-feed-react/src/containers/PicsContainer.js\";\nimport React, { Component } from 'react';\nimport PicsList from '../components/Pics/PicsList';\nimport { connect } from 'react-redux';\n\nvar PicsContainer =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(PicsContainer, _Component);\n\n  function PicsContainer() {\n    _classCallCheck(this, PicsContainer);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(PicsContainer).apply(this, arguments));\n  }\n\n  _createClass(PicsContainer, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      if (this.props.pics.length === 0) {\n        this.props.fetchPics();\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(React.Fragment, null, React.createElement(PicsList, {\n        pics: this.props.pics,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 18\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return PicsContainer;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    pics: state.picsReducer.pics\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    fetchPics: function (_fetchPics) {\n      function fetchPics() {\n        return _fetchPics.apply(this, arguments);\n      }\n\n      fetchPics.toString = function () {\n        return _fetchPics.toString();\n      };\n\n      return fetchPics;\n    }(function () {\n      return dispatch(fetchPics());\n    })\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(PicsContainer);","map":{"version":3,"sources":["/Users/peter/Development/code/proj-photo-feed/photo-feed-react/src/containers/PicsContainer.js"],"names":["React","Component","PicsList","connect","PicsContainer","props","pics","length","fetchPics","mapStateToProps","state","picsReducer","mapDispatchToProps","dispatch"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,QAAP,MAAqB,6BAArB;AACA,SAAQC,OAAR,QAAsB,aAAtB;;IAEMC,a;;;;;;;;;;;;;wCAEkB;AAChB,UAAI,KAAKC,KAAL,CAAWC,IAAX,CAAgBC,MAAhB,KAA2B,CAA/B,EAAiC;AAC7B,aAAKF,KAAL,CAAWG,SAAX;AACH;AACJ;;;6BAIQ;AACL,aACI,0CACA,oBAAC,QAAD;AAAU,QAAA,IAAI,EAAE,KAAKH,KAAL,CAAWC,IAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADA,CADJ;AAKH;;;;EAhBuBL,S;;AAmB5B,IAAMQ,eAAe,GAAG,SAAlBA,eAAkB,CAACC,KAAD,EAAW;AAC/B,SAAO;AAACJ,IAAAA,IAAI,EAAEI,KAAK,CAACC,WAAN,CAAkBL;AAAzB,GAAP;AACH,CAFD;;AAIA,IAAMM,kBAAkB,GAAG,SAArBA,kBAAqB,CAACC,QAAD;AAAA,SAAe;AACtCL,IAAAA,SAAS;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA,MAAE;AAAA,aAAMK,QAAQ,CAACL,SAAS,EAAV,CAAd;AAAA,KAAF;AAD6B,GAAf;AAAA,CAA3B;;AAKA,eAAeL,OAAO,CAACM,eAAD,EAAkBG,kBAAlB,CAAP,CAA6CR,aAA7C,CAAf","sourcesContent":["import React, { Component } from 'react';\nimport PicsList from '../components/Pics/PicsList'\nimport {connect} from 'react-redux'\n\nclass PicsContainer extends Component {\n    \n    componentDidMount() {\n        if (this.props.pics.length === 0){\n            this.props.fetchPics()\n        }\n    }\n\n    \n    \n    render() {\n        return(\n            <> \n            <PicsList pics={this.props.pics} />\n            </>\n        )\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {pics: state.picsReducer.pics}\n}\n\nconst mapDispatchToProps = (dispatch) => ({\n    fetchPics: () => dispatch(fetchPics())\n  })\n  \n\nexport default connect(mapStateToProps, mapDispatchToProps)(PicsContainer)"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import * as types from './actionTypes';\nimport { API_URL } from './apiUrl';\nexport function fetchPics() {\n  //changing this off of export default to reg expert is what solved that final test (async actions). In App.js I then had to add the curly braces around the import fetchCats line\n  return function (dispatch) {\n    dispatch({\n      type: types.LOADING_PICS\n    });\n    return fetch(\"\".concat(API_URL, \"/pics\"), {\n      headers: {\n        'Authorization': \"Bearer \".concat(localStorage.getItem('token'))\n      }\n    }).then(function (resp) {\n      return resp.json();\n    }).then(function (picData) {\n      debugger;\n      return dispatch({\n        type: types.FETCH_PICS,\n        payload: picData\n      });\n    });\n  };\n}","map":{"version":3,"sources":["/Users/peter/Development/code/proj-photo-feed/photo-feed-react/src/actions/picActions.js"],"names":["types","API_URL","fetchPics","dispatch","type","LOADING_PICS","fetch","headers","localStorage","getItem","then","resp","json","picData","FETCH_PICS","payload"],"mappings":"AAAA,OAAO,KAAKA,KAAZ,MAAuB,eAAvB;AACA,SAAQC,OAAR,QAAsB,UAAtB;AAGA,OAAO,SAASC,SAAT,GAAsB;AAAE;AAC3B,SAAO,UAACC,QAAD,EAAc;AACjBA,IAAAA,QAAQ,CAAC;AAACC,MAAAA,IAAI,EAAEJ,KAAK,CAACK;AAAb,KAAD,CAAR;AACA,WAAOC,KAAK,WAAIL,OAAJ,YAAoB;AAC5BM,MAAAA,OAAO,EAAE;AACL,0CAA2BC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAA3B;AADK;AADmB,KAApB,CAAL,CAKFC,IALE,CAKG,UAAAC,IAAI;AAAA,aAAIA,IAAI,CAACC,IAAL,EAAJ;AAAA,KALP,EAMFF,IANE,CAMG,UAAAG,OAAO,EAAI;AACb;AACA,aAAOV,QAAQ,CAAC;AAACC,QAAAA,IAAI,EAAEJ,KAAK,CAACc,UAAb;AAAyBC,QAAAA,OAAO,EAAEF;AAAlC,OAAD,CAAf;AAA4D,KAR7D,CAAP;AASH,GAXD;AAYH","sourcesContent":["import * as types from './actionTypes'\nimport {API_URL} from './apiUrl'\n\n\nexport function fetchPics () { //changing this off of export default to reg expert is what solved that final test (async actions). In App.js I then had to add the curly braces around the import fetchCats line\n    return (dispatch) => { \n        dispatch({type: types.LOADING_PICS})\n        return fetch(`${API_URL}/pics`, {\n            headers: {\n                'Authorization': `Bearer ${localStorage.getItem('token')}`\n            }\n        })\n            .then(resp => resp.json())\n            .then(picData => {\n                debugger\n                return dispatch({type: types.FETCH_PICS, payload: picData})})\n    }\n}"]},"metadata":{},"sourceType":"module"}
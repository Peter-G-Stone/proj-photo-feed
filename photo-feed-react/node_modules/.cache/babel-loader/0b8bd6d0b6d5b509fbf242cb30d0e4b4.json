{"ast":null,"code":"import _classCallCheck from \"/Users/peter/Development/code/proj-photo-feed/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/peter/Development/code/proj-photo-feed/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/peter/Development/code/proj-photo-feed/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/peter/Development/code/proj-photo-feed/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/peter/Development/code/proj-photo-feed/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/peter/Development/code/proj-photo-feed/src/App.js\";\nimport React, { Component } from 'react';\nimport './App.css';\nimport { fetchPics } from './actions/picActions';\nimport { connect } from 'react-redux';\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  function App() {\n    _classCallCheck(this, App);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(App).apply(this, arguments));\n  }\n\n  _createClass(App, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {}\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        className: \"App\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 15\n        },\n        __self: this\n      }, React.createElement(\"header\", {\n        className: \"App-header\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 16\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 17\n        },\n        __self: this\n      }, \"Photo Feed (with Behance)\")));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    pics: state.cats.pictures\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    fetchCats: function (_fetchCats) {\n      function fetchCats() {\n        return _fetchCats.apply(this, arguments);\n      }\n\n      fetchCats.toString = function () {\n        return _fetchCats.toString();\n      };\n\n      return fetchCats;\n    }(function () {\n      return dispatch(fetchCats());\n    })\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);","map":{"version":3,"sources":["/Users/peter/Development/code/proj-photo-feed/src/App.js"],"names":["React","Component","fetchPics","connect","App","mapStateToProps","state","pics","cats","pictures","mapDispatchToProps","dispatch","fetchCats"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,WAAP;AACA,SAAQC,SAAR,QAAwB,sBAAxB;AACA,SAASC,OAAT,QAAwB,aAAxB;;IAGMC,G;;;;;;;;;;;;;wCAEgB,CAEnB;;;6BAEQ;AACP,aACE;AAAK,QAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAQ,QAAA,SAAS,EAAC,YAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qCADF,CADF,CADF;AAUD;;;;EAjBeH,S;;AAqBlB,IAAMI,eAAe,GAAG,SAAlBA,eAAkB,CAACC,KAAD,EAAW;AACjC,SAAO;AAACC,IAAAA,IAAI,EAAED,KAAK,CAACE,IAAN,CAAWC;AAAlB,GAAP;AACD,CAFD;;AAIA,IAAMC,kBAAkB,GAAG,SAArBA,kBAAqB,CAACC,QAAD;AAAA,SAAe;AACxCC,IAAAA,SAAS;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA,MAAE;AAAA,aAAMD,QAAQ,CAACC,SAAS,EAAV,CAAd;AAAA,KAAF;AAD+B,GAAf;AAAA,CAA3B;;AAKA,eAAeT,OAAO,CAACE,eAAD,EAAkBK,kBAAlB,CAAP,CAA6CN,GAA7C,CAAf","sourcesContent":["import React, { Component } from 'react';\nimport './App.css';\nimport {fetchPics} from './actions/picActions'\nimport { connect } from 'react-redux'\n\n\nclass App extends Component {\n  \n  componentDidMount() {\n\n  }\n  \n  render() {\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\">\n          <p>\n            Photo Feed (with Behance)\n          </p>          \n        </header>\n\n      </div>\n    );\n  }\n}\n\n\nconst mapStateToProps = (state) => {\n  return {pics: state.cats.pictures}\n}\n\nconst mapDispatchToProps = (dispatch) => ({\n  fetchCats: () => dispatch(fetchCats())\n})\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App)"]},"metadata":{},"sourceType":"module"}
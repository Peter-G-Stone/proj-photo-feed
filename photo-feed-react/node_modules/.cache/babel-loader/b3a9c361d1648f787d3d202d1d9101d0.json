{"ast":null,"code":"import _classCallCheck from \"/Users/peter/Development/code/proj-photo-feed/photo-feed-react/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/peter/Development/code/proj-photo-feed/photo-feed-react/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/peter/Development/code/proj-photo-feed/photo-feed-react/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/peter/Development/code/proj-photo-feed/photo-feed-react/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/peter/Development/code/proj-photo-feed/photo-feed-react/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/peter/Development/code/proj-photo-feed/photo-feed-react/src/containers/PicsContainer.js\";\nimport React, { Component } from 'react';\nimport PicsList from '../components/Pics/PicsList';\nimport { connect } from 'react-redux';\nimport { fetchPics as _fetchPics } from '../actions/picActions';\n\nvar PicsContainer =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(PicsContainer, _Component);\n\n  function PicsContainer() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, PicsContainer);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(PicsContainer)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _this.filterForUserPics = function () {\n      var userPicIds = _this.props.user.pics.map(function (picObj) {\n        return picObj.id;\n      });\n\n      var UserPics = _this.props.pics.filter(function (pic) {\n        return userPicIds.includes(pic.id);\n      });\n\n      return UserPics;\n    };\n\n    return _this;\n  }\n\n  _createClass(PicsContainer, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      debugger;\n\n      if (this.props.pics.length === 0) {\n        this.props.fetchPics();\n      } else {\n        console.log('you are in the else in picsContainer');\n      }\n    }\n  }, {\n    key: \"render\",\n    // filterForArtistPics = () => {\n    //     const userPicIds = this.props.user.pics.map(picObj => picObj.id)\n    //     const UserPics = this.props.pics.filter(pic => userPicIds.includes(pic.id))\n    //     return UserPics\n    // }\n    value: function render() {\n      return React.createElement(React.Fragment, null, React.createElement(PicsList, {\n        pics: this.props.pics,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return PicsContainer;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    pics: state.picsReducer.pics\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    fetchPics: function fetchPics() {\n      return dispatch(_fetchPics());\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(PicsContainer);","map":{"version":3,"sources":["/Users/peter/Development/code/proj-photo-feed/photo-feed-react/src/containers/PicsContainer.js"],"names":["React","Component","PicsList","connect","fetchPics","PicsContainer","filterForUserPics","userPicIds","props","user","pics","map","picObj","id","UserPics","filter","pic","includes","length","console","log","mapStateToProps","state","picsReducer","mapDispatchToProps","dispatch"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,QAAP,MAAqB,6BAArB;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,SAAQC,SAAS,IAATA,UAAR,QAAwB,uBAAxB;;IAEMC,a;;;;;;;;;;;;;;;;;;UAWFC,iB,GAAoB,YAAM;AACtB,UAAMC,UAAU,GAAG,MAAKC,KAAL,CAAWC,IAAX,CAAgBC,IAAhB,CAAqBC,GAArB,CAAyB,UAAAC,MAAM;AAAA,eAAIA,MAAM,CAACC,EAAX;AAAA,OAA/B,CAAnB;;AACA,UAAMC,QAAQ,GAAG,MAAKN,KAAL,CAAWE,IAAX,CAAgBK,MAAhB,CAAuB,UAAAC,GAAG;AAAA,eAAIT,UAAU,CAACU,QAAX,CAAoBD,GAAG,CAACH,EAAxB,CAAJ;AAAA,OAA1B,CAAjB;;AACA,aAAOC,QAAP;AACH,K;;;;;;;wCAbmB;AACV;;AACN,UAAI,KAAKN,KAAL,CAAWE,IAAX,CAAgBQ,MAAhB,KAA2B,CAA/B,EAAiC;AACzB,aAAKV,KAAL,CAAWJ,SAAX;AACP,OAFD,MAEO;AACHe,QAAAA,OAAO,CAACC,GAAR,CAAY,sCAAZ;AACH;AACJ;;;AAQD;AACA;AACA;AACA;AACA;6BAES;AACL,aACI,0CACA,oBAAC,QAAD;AAAU,QAAA,IAAI,EAAE,KAAKZ,KAAL,CAAWE,IAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADA,CADJ;AAKH;;;;EA7BuBT,S;;AAgC5B,IAAMoB,eAAe,GAAG,SAAlBA,eAAkB,CAACC,KAAD,EAAW;AAC/B,SAAO;AAACZ,IAAAA,IAAI,EAAEY,KAAK,CAACC,WAAN,CAAkBb;AAAzB,GAAP;AACH,CAFD;;AAIA,IAAMc,kBAAkB,GAAG,SAArBA,kBAAqB,CAACC,QAAD;AAAA,SAAe;AACtCrB,IAAAA,SAAS,EAAE;AAAA,aAAMqB,QAAQ,CAACrB,UAAS,EAAV,CAAd;AAAA;AAD2B,GAAf;AAAA,CAA3B;;AAKA,eAAeD,OAAO,CAACkB,eAAD,EAAkBG,kBAAlB,CAAP,CAA6CnB,aAA7C,CAAf","sourcesContent":["import React, { Component } from 'react';\nimport PicsList from '../components/Pics/PicsList'\nimport {connect} from 'react-redux'\nimport {fetchPics} from '../actions/picActions'\n\nclass PicsContainer extends Component {\n    \n    componentDidMount() {\n              debugger\n        if (this.props.pics.length === 0){\n                this.props.fetchPics()\n        } else {\n            console.log('you are in the else in picsContainer')\n        }\n    }\n\n    filterForUserPics = () => {\n        const userPicIds = this.props.user.pics.map(picObj => picObj.id)\n        const UserPics = this.props.pics.filter(pic => userPicIds.includes(pic.id))\n        return UserPics\n    }\n\n    // filterForArtistPics = () => {\n    //     const userPicIds = this.props.user.pics.map(picObj => picObj.id)\n    //     const UserPics = this.props.pics.filter(pic => userPicIds.includes(pic.id))\n    //     return UserPics\n    // }\n    \n    render() {\n        return(\n            <> \n            <PicsList pics={this.props.pics} />\n            </>\n        )\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {pics: state.picsReducer.pics}\n}\n\nconst mapDispatchToProps = (dispatch) => ({\n    fetchPics: () => dispatch(fetchPics())\n  })\n  \n\nexport default connect(mapStateToProps, mapDispatchToProps)(PicsContainer)"]},"metadata":{},"sourceType":"module"}
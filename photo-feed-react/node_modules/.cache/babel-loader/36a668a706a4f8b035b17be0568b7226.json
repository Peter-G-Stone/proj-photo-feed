{"ast":null,"code":"import * as types from './actionTypes';\nimport { API_URL } from './apiUrl';\nexport function fetchPics() {\n  //changing this not export default, just a regular export. In App.js add the curly braces around the import fetchPics line\n  return function (dispatch) {\n    dispatch({\n      type: types.LOADING_PICS\n    });\n    return fetch(\"\".concat(API_URL, \"/pics\"), {\n      headers: {\n        'Authorization': \"Bearer \".concat(localStorage.token)\n      }\n    }).catch(function (error) {\n      return console.error(error);\n    }).then(function (resp) {\n      return resp.json();\n    }).then(function (picData) {\n      dispatch({\n        type: types.FETCH_PICS,\n        payload: picData\n      });\n    }).catch(function (error) {\n      return console.log(error);\n    });\n  };\n}\nexport function fetchArtistPics(artistId) {\n  return function (dispatch) {\n    dispatch({\n      type: types.LOADING_PICS\n    });\n    return fetch(\"\".concat(API_URL, \"/artists/\").concat(artistId), {\n      headers: {\n        'Authorization': \"Bearer \".concat(localStorage.token)\n      }\n    }).catch(function (error) {\n      return console.error(error);\n    }).then(function (resp) {\n      return resp.json();\n    }).then(function (picData) {\n      dispatch({\n        type: types.FETCH_ARTIST_PICS,\n        payload: picData\n      });\n    }).catch(function (error) {\n      return console.log(error);\n    });\n  };\n}\nexport function savePic(pic) {\n  return function (dispatch) {\n    return fetch(\"\".concat(API_URL, \"/add_pic_to_user\"), {\n      method: \"POST\",\n      headers: {\n        \"Accept\": \"application/json\",\n        \"Content-Type\": \"application/json\",\n        'Authorization': \"Bearer \".concat(localStorage.token)\n      },\n      body: JSON.stringify({\n        pic: pic\n      })\n    }).then(function (resp) {\n      return resp.json();\n    }).then(function (jresp) {\n      return dispatch({\n        //sending this off is intended to refresh the user's cache of pics now that we just added this one  \n        type: types.AUTHENTICATION_SUCCESS,\n        user: jresp,\n        token: localStorage.token\n      });\n    }).catch(function (error) {\n      return console.log(error);\n    });\n  };\n}\nexport function unSavePic(pic) {\n  return function (dispatch) {\n    return fetch(\"\".concat(API_URL, \"/remove_pic_from_user\"), {\n      method: \"POST\",\n      headers: {\n        \"Accept\": \"application/json\",\n        \"Content-Type\": \"application/json\",\n        'Authorization': \"Bearer \".concat(localStorage.token)\n      },\n      body: JSON.stringify({\n        pic: pic\n      })\n    }).then(function (resp) {\n      return resp.json();\n    }).then(function (jresp) {\n      return dispatch({\n        //sending this off is intended to refresh the user's cache of pics now that we just added this one  \n        type: types.AUTHENTICATION_SUCCESS,\n        user: jresp,\n        token: localStorage.token\n      });\n    }).catch(function (error) {\n      return console.log(error);\n    });\n  };\n}","map":{"version":3,"sources":["/Users/peter/Development/code/proj-photo-feed/photo-feed-react/src/actions/picActions.js"],"names":["types","API_URL","fetchPics","dispatch","type","LOADING_PICS","fetch","headers","localStorage","token","catch","error","console","then","resp","json","picData","FETCH_PICS","payload","log","fetchArtistPics","artistId","FETCH_ARTIST_PICS","savePic","pic","method","body","JSON","stringify","jresp","AUTHENTICATION_SUCCESS","user","unSavePic"],"mappings":"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","sourcesContent":["import * as types from './actionTypes'\nimport {API_URL} from './apiUrl'\n\n\nexport function fetchPics () { //changing this not export default, just a regular export. In App.js add the curly braces around the import fetchPics line\n    return (dispatch) => { \n        dispatch({type: types.LOADING_PICS})\n        return fetch(`${API_URL}/pics`, {\n            headers: {\n                'Authorization': `Bearer ${localStorage.token}`\n            }\n        })\n            .catch(error => console.error(error))\n            .then(resp => resp.json())\n            .then(picData => {\n                dispatch({type: types.FETCH_PICS, payload: picData})})\n            .catch(error => console.log(error))\n    }\n}\n\n\nexport function fetchArtistPics (artistId) { \n    return (dispatch) => { \n        dispatch({type: types.LOADING_PICS})\n        return fetch(`${API_URL}/artists/${artistId}`, {\n            headers: {\n                'Authorization': `Bearer ${localStorage.token}`\n            }\n        })\n        .catch(error => console.error(error))\n        .then(resp => resp.json())\n        .then(picData => {\n                dispatch({type: types.FETCH_ARTIST_PICS, payload: picData})})\n            .catch(error => console.log(error))\n    }\n}\n\n\n\nexport function savePic(pic) {\n    return (dispatch) => {\n        return fetch(`${API_URL}/add_pic_to_user`, {\n            method: \"POST\",\n            headers: {\n                \"Accept\":\"application/json\",\n                \"Content-Type\":\"application/json\",\n                'Authorization': `Bearer ${localStorage.token}`\n              },\n              body: JSON.stringify({\n                  pic: pic})\n        })\n        .then(resp => resp.json())\n        .then(jresp => {\n            return dispatch({ //sending this off is intended to refresh the user's cache of pics now that we just added this one  \n                type: types.AUTHENTICATION_SUCCESS,\n                user: jresp,\n                token: localStorage.token\n            })\n        })\n        .catch(error => console.log(error))\n    }\n}\n\n\n\nexport function unSavePic(pic) {\n    return (dispatch) => {\n        return fetch(`${API_URL}/remove_pic_from_user`, {\n            method: \"POST\",\n            headers: {\n                \"Accept\":\"application/json\",\n                \"Content-Type\":\"application/json\",\n                'Authorization': `Bearer ${localStorage.token}`\n              },\n              body: JSON.stringify({\n                  pic: pic})\n        })\n        .then(resp => resp.json())\n        .then(jresp => {\n            return dispatch({ //sending this off is intended to refresh the user's cache of pics now that we just added this one  \n                type: types.AUTHENTICATION_SUCCESS,\n                user: jresp,\n                token: localStorage.token\n            })\n        })\n        .catch(error => console.log(error))\n    }\n}"]},"metadata":{},"sourceType":"module"}